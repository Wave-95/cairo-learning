{
    "attributes": [],
    "builtins": [],
    "data": [
        "0x1104800180018000",
        "0x7",
        "0x1104800180018000",
        "0x5",
        "0x1104800180018000",
        "0x3",
        "0x208b7fff7fff7ffe",
        "0x480680017fff8000",
        "0x3e8",
        "0x208b7fff7fff7ffe"
    ],
    "debug_info": {
        "file_contents": {
            "/Users/victorwu/cairo/cairo_venv/lib/python3.9/site-packages/starkware/cairo/lang/compiler/lib/registers.cairo": "# Returns the contents of the fp and pc registers of the calling function.\n# The pc register's value is the address of the instruction that follows directly after the\n# invocation of get_fp_and_pc().\nfunc get_fp_and_pc() -> (fp_val, pc_val):\n    # The call instruction itself already places the old fp and the return pc at [ap - 2], [ap - 1].\n    return (fp_val=[ap - 2], pc_val=[ap - 1])\nend\n\n# Returns the content of the ap register just before this function was invoked.\n@known_ap_change\nfunc get_ap() -> (ap_val):\n    # Once get_ap() is invoked, fp points to ap + 2 (since the call instruction placed the old fp\n    # and pc in memory, advancing ap accordingly).\n    # Hence, the desired ap value is fp - 2.\n    let (fp_val, pc_val) = get_fp_and_pc()\n    return (ap_val=fp_val - 2)\nend\n",
            "fp.cairo": "func main():\n    call foo\n    call foo\n    call foo\n\n    ret\nend\n\nfunc foo():\n    [ap] = 1000; ap++\n    ret\nend"
        },
        "instruction_locations": {
            "0": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 0,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 13,
                    "end_line": 2,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 2
                }
            },
            "2": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 1,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 13,
                    "end_line": 3,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 3
                }
            },
            "4": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 13,
                    "end_line": 4,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 4
                }
            },
            "6": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.main"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 8,
                    "end_line": 6,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 6
                }
            },
            "7": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.foo"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 0
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 22,
                    "end_line": 10,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 10
                }
            },
            "9": {
                "accessible_scopes": [
                    "__main__",
                    "__main__.foo"
                ],
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 1
                    },
                    "reference_ids": {}
                },
                "hints": [],
                "inst": {
                    "end_col": 8,
                    "end_line": 11,
                    "input_file": {
                        "filename": "fp.cairo"
                    },
                    "start_col": 5,
                    "start_line": 11
                }
            }
        }
    },
    "hints": {},
    "identifiers": {
        "__main__.foo": {
            "decorators": [],
            "pc": 7,
            "type": "function"
        },
        "__main__.foo.Args": {
            "full_name": "__main__.foo.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.foo.ImplicitArgs": {
            "full_name": "__main__.foo.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.foo.Return": {
            "full_name": "__main__.foo.Return",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.foo.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.main": {
            "decorators": [],
            "pc": 0,
            "type": "function"
        },
        "__main__.main.Args": {
            "full_name": "__main__.main.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.ImplicitArgs": {
            "full_name": "__main__.main.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.Return": {
            "full_name": "__main__.main.Return",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
        "references": []
    }
}
